// Code generated by entc, DO NOT EDIT.

package instance

import (
	"time"
)

const (
	// Label holds the string label denoting the instance type in the database.
	Label = "instance"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldApplicationId holds the string denoting the applicationid field in the database.
	FieldApplicationId = "applicationId"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "createdAt"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updatedAt"

	// EdgeApplication holds the string denoting the application edge name in mutations.
	EdgeApplication = "application"
	// EdgeBuilds holds the string denoting the builds edge name in mutations.
	EdgeBuilds = "builds"
	// EdgeConfig holds the string denoting the config edge name in mutations.
	EdgeConfig = "config"

	// Table holds the table name of the instance in the database.
	Table = "instances"
	// ApplicationTable is the table the holds the application relation/edge.
	ApplicationTable = "instances"
	// ApplicationInverseTable is the table name for the Application entity.
	// It exists in this package in order to avoid circular dependency with the "application" package.
	ApplicationInverseTable = "applications"
	// ApplicationColumn is the table column denoting the application relation/edge.
	ApplicationColumn = "application_instances"
	// BuildsTable is the table the holds the builds relation/edge.
	BuildsTable = "builds"
	// BuildsInverseTable is the table name for the Build entity.
	// It exists in this package in order to avoid circular dependency with the "build" package.
	BuildsInverseTable = "builds"
	// BuildsColumn is the table column denoting the builds relation/edge.
	BuildsColumn = "instance_builds"
	// ConfigTable is the table the holds the config relation/edge.
	ConfigTable = "instances"
	// ConfigInverseTable is the table name for the HelmConfig entity.
	// It exists in this package in order to avoid circular dependency with the "helmconfig" package.
	ConfigInverseTable = "helm_configs"
	// ConfigColumn is the table column denoting the config relation/edge.
	ConfigColumn = "instance_config"
)

// Columns holds all SQL columns for instance fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldApplicationId,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Instance type.
var ForeignKeys = []string{
	"application_instances",
	"instance_config",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the createdAt field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	UpdateDefaultUpdatedAt func() time.Time
)
