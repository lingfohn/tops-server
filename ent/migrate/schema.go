// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// ApplicationsColumns holds the columns for the "applications" table.
	ApplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "multi", Type: field.TypeBool, Default: true},
		{Name: "projectId", Type: field.TypeInt},
		{Name: "namespaceId", Type: field.TypeInt},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "application_config", Type: field.TypeInt, Nullable: true},
		{Name: "namespace_applications", Type: field.TypeInt, Nullable: true},
		{Name: "project_applications", Type: field.TypeInt, Nullable: true},
	}
	// ApplicationsTable holds the schema information for the "applications" table.
	ApplicationsTable = &schema.Table{
		Name:       "applications",
		Columns:    ApplicationsColumns,
		PrimaryKey: []*schema.Column{ApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "applications_helm_configs_config",
				Columns: []*schema.Column{ApplicationsColumns[7]},

				RefColumns: []*schema.Column{HelmConfigsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "applications_namespaces_applications",
				Columns: []*schema.Column{ApplicationsColumns[8]},

				RefColumns: []*schema.Column{NamespacesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "applications_projects_applications",
				Columns: []*schema.Column{ApplicationsColumns[9]},

				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "application_namespace_applications_project_applications",
				Unique:  true,
				Columns: []*schema.Column{ApplicationsColumns[8], ApplicationsColumns[9]},
			},
		},
	}
	// BuildsColumns holds the columns for the "builds" table.
	BuildsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tag", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt},
		{Name: "commitId", Type: field.TypeString},
		{Name: "shortId", Type: field.TypeString},
		{Name: "message", Type: field.TypeString},
		{Name: "committerName", Type: field.TypeString},
		{Name: "committedData", Type: field.TypeTime},
		{Name: "buildTime", Type: field.TypeTime},
		{Name: "jenkinsQueueId", Type: field.TypeInt},
		{Name: "jenkinsBuildId", Type: field.TypeInt, Nullable: true},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "instance_builds", Type: field.TypeInt, Nullable: true},
	}
	// BuildsTable holds the schema information for the "builds" table.
	BuildsTable = &schema.Table{
		Name:       "builds",
		Columns:    BuildsColumns,
		PrimaryKey: []*schema.Column{BuildsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "builds_instances_builds",
				Columns: []*schema.Column{BuildsColumns[14]},

				RefColumns: []*schema.Column{InstancesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// HelmConfigsColumns holds the columns for the "helm_configs" table.
	HelmConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "chartVersion", Type: field.TypeString},
		{Name: "active", Type: field.TypeString},
		{Name: "enableServcie", Type: field.TypeBool},
		{Name: "serviceType", Type: field.TypeString, Default: "ClusterIP"},
		{Name: "nodePort", Type: field.TypeInt},
		{Name: "limitMem", Type: field.TypeString},
		{Name: "limitCPU", Type: field.TypeString},
		{Name: "reqCPU", Type: field.TypeString},
		{Name: "reqMem", Type: field.TypeString},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// HelmConfigsTable holds the schema information for the "helm_configs" table.
	HelmConfigsTable = &schema.Table{
		Name:        "helm_configs",
		Columns:     HelmConfigsColumns,
		PrimaryKey:  []*schema.Column{HelmConfigsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// InstancesColumns holds the columns for the "instances" table.
	InstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "applicationId", Type: field.TypeInt},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "application_instances", Type: field.TypeInt, Nullable: true},
		{Name: "instance_config", Type: field.TypeInt, Nullable: true},
	}
	// InstancesTable holds the schema information for the "instances" table.
	InstancesTable = &schema.Table{
		Name:       "instances",
		Columns:    InstancesColumns,
		PrimaryKey: []*schema.Column{InstancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "instances_applications_instances",
				Columns: []*schema.Column{InstancesColumns[5]},

				RefColumns: []*schema.Column{ApplicationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "instances_helm_configs_config",
				Columns: []*schema.Column{InstancesColumns[6]},

				RefColumns: []*schema.Column{HelmConfigsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// K8sClustersColumns holds the columns for the "k8s_clusters" table.
	K8sClustersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "cluster", Type: field.TypeString},
		{Name: "helmApi", Type: field.TypeString},
		{Name: "accessToken", Type: field.TypeString, Nullable: true},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// K8sClustersTable holds the schema information for the "k8s_clusters" table.
	K8sClustersTable = &schema.Table{
		Name:        "k8s_clusters",
		Columns:     K8sClustersColumns,
		PrimaryKey:  []*schema.Column{K8sClustersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MenusColumns holds the columns for the "menus" table.
	MenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "path", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "component", Type: field.TypeString},
		{Name: "parentId", Type: field.TypeInt},
		{Name: "redirect", Type: field.TypeString, Nullable: true},
		{Name: "weight", Type: field.TypeInt, Nullable: true, Default: 10},
		{Name: "level", Type: field.TypeInt},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "target", Type: field.TypeString, Nullable: true},
		{Name: "keepAlive", Type: field.TypeBool},
		{Name: "show", Type: field.TypeBool, Nullable: true},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "menu_submenus", Type: field.TypeInt, Nullable: true},
	}
	// MenusTable holds the schema information for the "menus" table.
	MenusTable = &schema.Table{
		Name:       "menus",
		Columns:    MenusColumns,
		PrimaryKey: []*schema.Column{MenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "menus_menus_submenus",
				Columns: []*schema.Column{MenusColumns[15]},

				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NamespacesColumns holds the columns for the "namespaces" table.
	NamespacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "dockerRepo", Type: field.TypeString},
		{Name: "repoNamespace", Type: field.TypeString},
		{Name: "active", Type: field.TypeString},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "k8s_cluster_namespaces", Type: field.TypeInt, Nullable: true},
	}
	// NamespacesTable holds the schema information for the "namespaces" table.
	NamespacesTable = &schema.Table{
		Name:       "namespaces",
		Columns:    NamespacesColumns,
		PrimaryKey: []*schema.Column{NamespacesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "namespaces_k8s_clusters_namespaces",
				Columns: []*schema.Column{NamespacesColumns[7]},

				RefColumns: []*schema.Column{K8sClustersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PermissionsColumns holds the columns for the "permissions" table.
	PermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "method", Type: field.TypeString},
		{Name: "fullpath", Type: field.TypeString},
		{Name: "action", Type: field.TypeString},
		{Name: "summary", Type: field.TypeString},
		{Name: "controlLevel", Type: field.TypeInt},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// PermissionsTable holds the schema information for the "permissions" table.
	PermissionsTable = &schema.Table{
		Name:        "permissions",
		Columns:     PermissionsColumns,
		PrimaryKey:  []*schema.Column{PermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "projectName", Type: field.TypeString, Unique: true},
		{Name: "proType", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "gitlab", Type: field.TypeString, Unique: true},
		{Name: "port", Type: field.TypeInt},
		{Name: "debugPort", Type: field.TypeInt},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:        "projects",
		Columns:     ProjectsColumns,
		PrimaryKey:  []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:        "roles",
		Columns:     RolesColumns,
		PrimaryKey:  []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "initial", Type: field.TypeBool, Default: true},
		{Name: "oauser", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "telephone", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "super", Type: field.TypeBool},
		{Name: "status", Type: field.TypeInt, Nullable: true},
		{Name: "lastLogin", Type: field.TypeTime, Nullable: true},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ApplicationsTable,
		BuildsTable,
		HelmConfigsTable,
		InstancesTable,
		K8sClustersTable,
		MenusTable,
		NamespacesTable,
		PermissionsTable,
		ProjectsTable,
		RolesTable,
		UsersTable,
	}
)

func init() {
	ApplicationsTable.ForeignKeys[0].RefTable = HelmConfigsTable
	ApplicationsTable.ForeignKeys[1].RefTable = NamespacesTable
	ApplicationsTable.ForeignKeys[2].RefTable = ProjectsTable
	BuildsTable.ForeignKeys[0].RefTable = InstancesTable
	InstancesTable.ForeignKeys[0].RefTable = ApplicationsTable
	InstancesTable.ForeignKeys[1].RefTable = HelmConfigsTable
	MenusTable.ForeignKeys[0].RefTable = MenusTable
	NamespacesTable.ForeignKeys[0].RefTable = K8sClustersTable
}
