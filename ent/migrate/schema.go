// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// MenusColumns holds the columns for the "menus" table.
	MenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "path", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "component", Type: field.TypeString},
		{Name: "parentId", Type: field.TypeInt},
		{Name: "redirect", Type: field.TypeString, Nullable: true},
		{Name: "weight", Type: field.TypeInt, Nullable: true, Default: 10},
		{Name: "level", Type: field.TypeInt},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "target", Type: field.TypeString, Nullable: true},
		{Name: "keepAlive", Type: field.TypeBool},
		{Name: "show", Type: field.TypeBool, Nullable: true},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
		{Name: "menu_submenus", Type: field.TypeInt, Nullable: true},
	}
	// MenusTable holds the schema information for the "menus" table.
	MenusTable = &schema.Table{
		Name:       "menus",
		Columns:    MenusColumns,
		PrimaryKey: []*schema.Column{MenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "menus_menus_submenus",
				Columns: []*schema.Column{MenusColumns[15]},

				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PermissionsColumns holds the columns for the "permissions" table.
	PermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "method", Type: field.TypeString},
		{Name: "fullpath", Type: field.TypeString},
		{Name: "action", Type: field.TypeString},
		{Name: "summary", Type: field.TypeString},
		{Name: "controlLevel", Type: field.TypeInt},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// PermissionsTable holds the schema information for the "permissions" table.
	PermissionsTable = &schema.Table{
		Name:        "permissions",
		Columns:     PermissionsColumns,
		PrimaryKey:  []*schema.Column{PermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:        "roles",
		Columns:     RolesColumns,
		PrimaryKey:  []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "initial", Type: field.TypeBool, Default: true},
		{Name: "oauser", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "telephone", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "super", Type: field.TypeBool},
		{Name: "status", Type: field.TypeInt, Nullable: true},
		{Name: "lastLogin", Type: field.TypeTime, Nullable: true},
		{Name: "createdAt", Type: field.TypeTime},
		{Name: "updatedAt", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MenusTable,
		PermissionsTable,
		RolesTable,
		UsersTable,
	}
)

func init() {
	MenusTable.ForeignKeys[0].RefTable = MenusTable
}
